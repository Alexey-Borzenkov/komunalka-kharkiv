name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          
      - name: Install dependencies
        run: npm ci

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          repository: Alexey-Borzenkov/PayTheBills
          run-id: 14430984342
          name: PayTheBills-win-x64
          path: temp-download

      - name: Extract Version
        id: version
        shell: pwsh
        run: |
          $versionFile = Join-Path (Get-Location) "temp-download" "version.txt"
          Write-Host "Looking for version file at: $versionFile"
          if (Test-Path $versionFile) {
            $version = Get-Content $versionFile -Raw
            $version = $version.Trim()
            Write-Host "Version extracted: $version"
          } else {
            Write-Host "Version file not found"
            $version = "1.0.0"
          }
          Write-Host "Final version: $version"
          "version=$version" >> $env:GITHUB_OUTPUT

      - name: Update Version in Page
        shell: pwsh
        run: |
          $version = "${{ steps.version.outputs.version }}"
          $content = Get-Content -Path "app/page.tsx" -Raw
          $content = $content -replace "'1.0.0' // This will be replaced by the actual version during build", "'$version'"
          Set-Content -Path "app/page.tsx" -Value $content -NoNewline
          
      - name: Prepare Download
        run: |
          mkdir -p public/downloads
          cd temp-download
          zip -r ../public/downloads/meter-reader-win-x64.zip ./* -x "version.txt"
        
      - name: Build
        run: npm run build
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4